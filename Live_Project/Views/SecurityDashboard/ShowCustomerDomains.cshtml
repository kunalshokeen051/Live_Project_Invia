@model List<LP.Models.ViewModels.DomainVM> 

<div class="container-md">
    <button class="btn btn-danger my-4 Admin-only-Containers d-none" id="addDomainButton">Add Domain</button>
    @foreach (var roundGroup in Model.GroupBy(vm => vm.Round).OrderByDescending(g => g.Key))
    {
        <h2>Round @roundGroup.Key</h2>
        <table class="table table-bordered table-responsive-md">
            <thead>
                <tr>
                    <th class="table-danger">Id</th>
                    <th class="table-danger">Title</th>
                    <th class="table-danger">Name</th>
                    <th class="table-danger">IpAddress</th>
                    <th class="table-danger">CriticalPort</th>
                    <th class="table-danger">OpenPort</th>
                    <th class="table-danger">WebServer</th>
                    <th class="table-danger Admin-only-Containers d-none ">Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in roundGroup)
                {
                    <tr>
                        <td>@(item.Id)</td>             @* ?? null-coalescing  operator*@
                        <td>@(item.Title ?? "N/A")</td>
                        <td>@(item.Name ?? "N/A")</td>
                        <td>@(item.IpAddress ?? "N/A")</td>
                        <td>@(item.CriticalPort ?? "N/A")</td>
                        <td>@(item.OpenPort ?? "N/A")</td>
                        <td class="web-server">@(item.WebServer ?? "N/A")</td>
                        <td class="Admin-only-Containers d-none"><button data-ip="@item.IpAddress" class="btn btn-danger" id="delete-button">X</button></td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@* model start here*@

<div class="modal fade" id="domainModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Add Domain</h5>
                <button type="button" class="btn btn-danger close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="domainForm" class="was-validated">
                    <div class="form-group">
                        <label for="Title">Title</label>
                        <input type="text" class="form-control" id="Title" name="Title" required autocomplete="off">
                        <div class="invalid-feedback">
                            This is required.
                        </div>
                        <div class="valid-feedback">
                            Looks good!
                        </div>
                    </div>  
                    <div class="form-group">
                        <label for="Name">Name</label>
                        <input type="text" class="form-control" id="Name" name="Name" required autocomplete="off">
                        <div class="invalid-feedback">
                            This is required.
                        </div>
                        <div class="valid-feedback">
                            Looks good!
                        </div>
                    </div>  
                    <div class="form-group">
                        <label for="IP Address">IP Address</label>
                        <input type="text" class="form-control" id="IpAddress" name="IpAddress" required autocomplete="off">
                        <div class="invalid-feedback">
                            This is required.
                        </div>
                        <div class="valid-feedback">
                            Looks good!
                        </div>
                    </div>  
                    <div class="form-group">
                        <label for="CriticalPort">CriticalPort</label>
                        <input type="text" class="form-control" id="CriticalPort" name="CriticalPort" required autocomplete="off">
                        <div class="invalid-feedback">
                            This is required.
                        </div>
                        <div class="valid-feedback">
                            Looks good!
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="OpenPort">OpenPort</label>
                        <input type="text" class="form-control" id="OpenPort" name="OpenPort" required autocomplete="off">
                         <div class="invalid-feedback">
                            This is required.
                        </div>
                        <div class="valid-feedback">
                            Looks good!
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="WebServer">WebServer</label>
                        <input type="text" class="form-control" id="WebServer" name="WebServer" required autocomplete="off">
                        <div class="invalid-feedback">
                            This is required.
                        </div>
                        <div class="valid-feedback">
                            Looks good!
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveDomain">Save</button>
            </div>
        </div>
    </div>
</div>




@section Scripts{
    <script>
        $(document).ready(function(){
            var customerId = @Model.Select(vm => vm.Id).First();

             if ('@Context.Request.HttpContext.Session.GetString("UserType")' === 'Customer') {
                $('.Customer-only-Containers').removeClass("d-none");
            } else {
                $('.Admin-only-Containers').removeClass("d-none");
            }

            $('.web-server:contains("N/A")').css('color', 'red');

            $("#addDomainButton").click(function () {
                $("#domainModal").modal("show");
            });
            
            $("#delete-button").click(function () {
                var ip = $(this).attr('data-ip');
                alert(ip);
                var data  ={
                customerId,
                 ip
                }
                $.ajax({
                    type: 'Post',
                    url: '/Dashboard/DeleteDomain',
                    data:data,
                    success: function (response) {
                      if(response.status == true){
                         location.reload();
                      }
                      else{
                          console.log(response.message);
                      }
                    },
                    error: function (error) {
                        console.error('Error disabling user: ' + JSON.stringify(error));
                    }
                });
            }); 
            
            $(".close").click(function () {
                $("#domainModal").modal("hide");
            });

            $("#saveDomain").click(function () {
                var domainData = {
                    Id: customerId,
                    Title: $("#Title").val(),
                    Name: $("#Name").val(),
                    IpAddress: $("#IpAddress").val(),
                    CriticalPort: $("#CriticalPort").val(),
                    OpenPort: $("#OpenPort").val(),
                    WebServer: $("#WebServer").val(),
                };
                $.ajax({
                    type: 'POST',
                    url: '/Dashboard/AddDomain',
                    data: domainData,
                    success: function (response) {
                        alert(response.message);
                    },
                    error: function (error) {
                        console.error('Error disabling user: ' + JSON.stringify(error));
                    }
                });
            });
        });
    </script>
}